Tuple Methods in Python
@START
a. Finding Elements in a Tuple
You can check for an item using the in keyword and find its index using .index().
\t print("banana" in fruits)   
\t print(fruits.index("cherry"))  
Output: 
\t True
\t 2
@END 
@START
b. Counting Occurrences
Use .count() to see how many times an element appears.
\t numbers = (1, 2, 2, 3, 4, 2, 5)
\t print(numbers.count(2))   
Output: 
\t 3
@END 
@START
c. Tuple Operations
Concatenation & Repeating
A = (1, 2, 3)
B = (4, 5, 6)
print(A + B)   
print(A * 2)  
Output: 
\t (1, 2, 3, 4, 5, 6)
\t (1, 2, 3, 1, 2, 3)
@END 
@START
d. Converting a List to a Tuple
\t  my_list = [1, 2, 3]
\t my_tuple = tuple(my_list)
\t print(my_tuple)   
Output: 
\t (1, 2, 3)
@END 
@START
Key Takeaways
1. Tuples are immutable, ordered collections.
2. Faster than lists for lookup operations.
3. Used when data should not change.
4. Supports indexing, slicing, and basic operations.
Tuples are great for storing fixed, unchangeable data efficiently! 
@END 
