Loops in Python – What, How, and Why?
@START
Loops are like a repeat button in programming! Instead of writing the same code multiple times, we automate repetition using loops.
What is a Loop?
A loop is a way to repeat a block of code multiple times until a condition is met.
Imagine you are doing jumping jacks in a workout. Instead of saying "jump" 20 times, you say:
"Repeat jumping 20 times!" – That’s exactly how loops work!
@END
@START
How Do Loops Work?
Python has two main types of loops:
1️. For Loop – Used when we know how many times we need to repeat something.
2. While Loop – Runs as long as a condition remains true.
@END
@START
Example of a For Loop
\t for i in range(5): 
\t     print("Hello Aarionaa!!!")
Output:
\t Hello Aarionaa!!!
\t Hello Aarionaa!!!
\t Hello Aarionaa!!!
\t Hello Aarionaa!!!
\t Hello Aarionaa!!!
@END
@START
Example of a While Loop
\t i = 1
\t while i <= 5:  # Runs while i is 5 or less
\t     print(i)
\t     i += 1
Output:
\t 1  
\t 2  
\t 3  
\t 4  
\t 5  
@END
@START
Why Use Loops?
1. Saves Time – No need to write the same code again and again.
2. Reduces Errors – Instead of making mistakes copying code, loops handle repetition perfectly. 
3. Works with Data – Easily process lists, files, user input, and more.
4. Automation – From checking emails to running a program continuously, loops are everywhere!
@END
